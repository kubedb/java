/*
 * KubeDB
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * Contact: hello@appscode.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.kubedb.client.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubernetes.client.models.V1PersistentVolumeClaimSpec;
import io.kubernetes.client.models.V1ResourceRequirements;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * V1alpha1ElasticsearchNode
 */

public class V1alpha1ElasticsearchNode {
  @SerializedName("prefix")
  private String prefix = null;

  @SerializedName("replicas")
  private Integer replicas = null;

  @SerializedName("resources")
  private V1ResourceRequirements resources = null;

  @SerializedName("storage")
  private V1PersistentVolumeClaimSpec storage = null;

  public V1alpha1ElasticsearchNode prefix(String prefix) {
    this.prefix = prefix;
    return this;
  }

   /**
   * Get prefix
   * @return prefix
  **/
  @ApiModelProperty(value = "")
  public String getPrefix() {
    return prefix;
  }

  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }

  public V1alpha1ElasticsearchNode replicas(Integer replicas) {
    this.replicas = replicas;
    return this;
  }

   /**
   * Replicas represents number of replica for this specific type of node
   * @return replicas
  **/
  @ApiModelProperty(value = "Replicas represents number of replica for this specific type of node")
  public Integer getReplicas() {
    return replicas;
  }

  public void setReplicas(Integer replicas) {
    this.replicas = replicas;
  }

  public V1alpha1ElasticsearchNode resources(V1ResourceRequirements resources) {
    this.resources = resources;
    return this;
  }

   /**
   * Compute Resources required by the sidecar container.
   * @return resources
  **/
  @ApiModelProperty(value = "Compute Resources required by the sidecar container.")
  public V1ResourceRequirements getResources() {
    return resources;
  }

  public void setResources(V1ResourceRequirements resources) {
    this.resources = resources;
  }

  public V1alpha1ElasticsearchNode storage(V1PersistentVolumeClaimSpec storage) {
    this.storage = storage;
    return this;
  }

   /**
   * Storage to specify how storage shall be used.
   * @return storage
  **/
  @ApiModelProperty(required = true, value = "Storage to specify how storage shall be used.")
  public V1PersistentVolumeClaimSpec getStorage() {
    return storage;
  }

  public void setStorage(V1PersistentVolumeClaimSpec storage) {
    this.storage = storage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1ElasticsearchNode v1alpha1ElasticsearchNode = (V1alpha1ElasticsearchNode) o;
    return Objects.equals(this.prefix, v1alpha1ElasticsearchNode.prefix) &&
        Objects.equals(this.replicas, v1alpha1ElasticsearchNode.replicas) &&
        Objects.equals(this.resources, v1alpha1ElasticsearchNode.resources) &&
        Objects.equals(this.storage, v1alpha1ElasticsearchNode.storage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(prefix, replicas, resources, storage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1ElasticsearchNode {\n");
    
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    storage: ").append(toIndentedString(storage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

